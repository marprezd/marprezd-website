import type { Metadata } from "next"
import type { ReactNode } from "react"
import { Box } from "@mui/material"
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter"
import InitColorSchemeScript from "@mui/material/InitColorSchemeScript"
import { ThemeProvider } from "@mui/material/styles"
import { NextIntlClientProvider } from "next-intl"
import { getMessages } from "next-intl/server"
import localfont from "next/font/local"
import muiTheme from "../lib/muiTheme"
import AppHeader from "./organisms/AppHeader"

const geistSans = localfont({
  variable: "--font-geist-sans",
  src: "../../public/fonts/Geist[wght].woff2",
  weight: "100 900",
  preload: true,
  display: "swap",
})

const geistMono = localfont({
  variable: "--font-geist-mono",
  src: "../../public/fonts/GeistMono[wght].woff2",
  weight: "100 900",
  preload: true,
  display: "swap",
})

// Interface Props
interface Props {
  children: ReactNode
  locale: string
}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function BaseLayout({
  children,
  locale,
}: Props) {
  // Providing all messages to the client side is the easiest way to get started
  const messages = await getMessages()

  return (
    <html
      className={`${geistSans.variable} ${geistMono.variable} antialiased h-full scroll-smooth`}
      lang={locale}
      data-scroll-behavior="smooth"
      suppressHydrationWarning
    >
      <body>
        <AppRouterCacheProvider
          options={{
            enableCssLayer: true,
          }}
        >
          <NextIntlClientProvider messages={messages}>
            <ThemeProvider theme={muiTheme}>
              <InitColorSchemeScript attribute="class" />
              <AppHeader />
              <Box component="main">
                {children}
              </Box>
            </ThemeProvider>
          </NextIntlClientProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  )
}
