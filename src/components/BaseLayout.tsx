// src/components/BaseLayout.tsx
import type { Metadata } from "next"
import type { ReactNode } from "react"
import { Box } from "@chakra-ui/react"
import { NextIntlClientProvider } from "next-intl"
import { getMessages } from "next-intl/server"
import localfont from "next/font/local"
import AppHeader from "./organisms/AppHeader"
import ThemeProviderWrapper from "./templates/ThemeProviderWrapper"

// Fonts
const geistSans = localfont({
  variable: "--font-geist-sans",
  src: "../../public/fonts/Geist[wght].woff2",
  weight: "100 900",
  preload: true,
  display: "swap",
})

const geistMono = localfont({
  variable: "--font-geist-mono",
  src: "../../public/fonts/GeistMono[wght].woff2",
  weight: "100 900",
  preload: true,
  display: "swap",
})

// Interface Props
interface Props {
  children: ReactNode
  locale: string
}

// Metadata
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

// Component
export default async function BaseLayout({
  children,
  locale,
}: Props) {
  // Providing all messages to the client side is the easiest way to get started
  const messages = await getMessages()

  return (
    <html
      className={`${geistSans.variable} ${geistMono.variable}`}
      lang={locale}
      data-scroll-behavior="smooth"
      suppressHydrationWarning
    >
      <body>
        <ThemeProviderWrapper>
          <NextIntlClientProvider messages={messages}>
            <Box textRendering="optimizeLegibility">
              <AppHeader />
              <Box as="main" mt="64px">
                {children}
              </Box>
            </Box>
          </NextIntlClientProvider>
        </ThemeProviderWrapper>
      </body>
    </html>
  )
}
